{"version":3,"sources":["Components/Frase.js","App.js","index.js"],"names":["ContenedorFrase","styled","div","Frase","frase","Object","keys","length","quote","author","Contenedor","Boton","button","App","useState","setfrase","consultarAPI","a","fetch","api","json","datos","console","log","useEffect","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q+BAGA,IAAMA,EAAkBC,IAAOC,IAAV,KAkDNC,EAfD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OAAkC,IAA9BC,OAAOC,KAAKF,GAAOG,OAAqB,KAG1C,eAACP,EAAD,WACE,6BAAKI,EAAMI,QACX,4BAAIJ,EAAMK,a,smBCxChB,IAAMC,EAAaT,IAAOC,IAAV,KAKVS,EAAQV,IAAOW,OAAV,KA4CIC,MAvBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,KAEPC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,MAChB,uDAFiB,cACbC,EADa,gBAICA,EAAIC,OAJL,OAIbC,EAJa,OAKnBC,QAAQC,IAAIF,GACZN,EAASM,EAAM,IANI,2CAAH,qDAalB,OAJAG,qBAAU,WACRR,MACC,IAGD,eAACN,EAAD,WACE,cAAC,EAAD,CAAON,MAAOA,IACd,cAACO,EAAD,CAAOc,QAAST,EAAhB,+BC1CNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.edb40200.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ContenedorFrase = styled.div`\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  background-color: #fff;\r\n  max-width: 800px;\r\n  margin-top: 4rem;\r\n  @media (min-width: 992px) {\r\n    margin: 10rem;\r\n  }\r\n  h1 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    text-align: center;\r\n    position: relative;\r\n    padding-left: 4rem;\r\n    margin-top: 4rem;\r\n\r\n    &::before {\r\n      content: open-quote;\r\n      font-size: 10rem;\r\n      color: black;\r\n      position: absolute;\r\n      left: -1rem;\r\n      top: -2rem;\r\n    }\r\n  }\r\n  p {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-size: 1.4rem;\r\n    text-align: right;\r\n    color: #666;\r\n    margin-top: 1rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Frase = ({ frase }) => {\r\n  if (Object.keys(frase).length === 0) return null;\r\n\r\n  return (\r\n    <ContenedorFrase>\r\n      <h1>{frase.quote}</h1>\r\n      <p>{frase.author}</p>\r\n    </ContenedorFrase>\r\n  );\r\n};\r\n\r\nFrase.propTypes = {\r\n  frase: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Frase;\r\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport Frase from \"./Components/Frase\";\n\nconst Contenedor = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nconst Boton = styled.button`\n  background: -webkit-linear-gradient(\n    top left,\n    #007d35 0%,\n    #007d35 40%,\n    #0f574e 100%\n  );\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #fff;\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size: 2rem;\n  border: 2px solid black;\n  transition: background-size 0.7s ease;\n  :hover {\n    cursor: pointer;\n    background-size: 400;\n  }\n`;\n\nfunction App() {\n  const [frase, setfrase] = useState({});\n  const consultarAPI = async () => {\n    const api = await fetch(\n      \"https://breaking-bad-quotes.herokuapp.com/v1/quotes\"\n    );\n    const datos = await api.json();\n    console.log(datos);\n    setfrase(datos[0]);\n  };\n\n  useEffect(() => {\n    consultarAPI();\n  }, []);\n\n  return (\n    <Contenedor>\n      <Frase frase={frase} />\n      <Boton onClick={consultarAPI}>Obtener Frase</Boton>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}